# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SupplierModel {
  id: Int!
  deliver_goods_yourself: Boolean!
  array_of_delivery_ids: [Int!]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Supplier {
  id: Int!
  deliver_goods_yourself: Boolean!
  array_of_delivery_ids: [Int!]!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  User: User
  Address: Address
}

type Address {
  id: Int!
  user_id: Int!
  supplier_id: Int
  type: AddressTypeEnum!
  name: String!
  postcode: Int
  country: String!
  region: String!
  city: String!
  street: String!
  house_number: Int!
  apartment_number_or_office: Int
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  User: User!
  Supplier: Supplier!
}

enum AddressTypeEnum {
  DELIVERY
  WAREHOUSE
}

type CartModel {
  id: Int!
  document_id: Int
  cloth_sex: ClothSexEnum!
  category_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

enum ClothSexEnum {
  MALE
  FEMALE
  UNISEX
}

type Profile {
  id: Int!
  user_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  User: User!
}

type Document {
  id: Int!
  url: String!
  name: String!
  type: DocumentTypeEnum!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

enum DocumentTypeEnum {
  IMAGE
  FILE
}

type User {
  id: Int!
  name: String!
  user_name: String
  document_id: Int
  array_of_delivery_ids: [Int!]!
  supplier_id: Int
  email: String!
  type: UserTypeEnum!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Document: Document
  Supplier: SupplierModel
  Cart: [CartModel!]
  UserRole: [UserRole!]
  Profile: Profile
  Address: Address
}

enum UserTypeEnum {
  USER
  GUEST
}

type UserRole {
  id: Int!
  user_id: Int!
  role_name: RolesEnum!
  User: [User!]!
}

enum RolesEnum {
  ADMIN
  USER
}

type ProductModel {
  id: Int!
  name: String!
  description_id: Int
  category_id: Int
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type Description {
  id: Int!
  text: String!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Product: [ProductModel!]
}

type CartProduct {
  id: Int!
  cart_id: Int!
  product_id: Int
  quantity: Int!
  supplier_id: Int
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Product: Product
  Cart: CartModel!
  Supplier: Supplier
}

type Size {
  id: Int!
  json: JSON!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type CartSize {
  size_id: Int!
  cart_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Cart: CartModel!
  Size: Size!
}

type Cart {
  id: Int!
  document_id: Int
  cloth_sex: ClothSexEnum!
  category_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  CartProducts: [CartProduct!]
  Category: Category
  CartSize: [CartSize!]
  Document: [Document!]
}

type CategoryModel {
  id: Int!
  parent_id: Int
  name: String!
  mannequin: MannequinPositionEnum
  sex: ClothSexEnum
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

enum MannequinPositionEnum {
  UP
  DOWN
  FULL
}

type CategoryDocument {
  id: Int!
  category_id: Int!
  document_id: Int!
  type: DocumentTypeOfCategoryEnum!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Category: CategoryModel!
  Document: Document
}

enum DocumentTypeOfCategoryEnum {
  MANNEQUIN
  PREVIEW
}

type Category {
  id: Int!
  parent_id: Int
  name: String!
  mannequin: MannequinPositionEnum
  sex: ClothSexEnum
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Children: [Category!]
  Parent: Category
  Product: [ProductModel!]
  Cart: [Cart!]
  CategoryDocument: [CategoryDocument!]
}

type ProductDocument {
  product_id: Int!
  document_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Document: Document!
}

type Product {
  id: Int!
  name: String!
  description_id: Int
  category_id: Int
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Description: Description
  Category: Category
  ProductDocument: [ProductDocument!]
}

type GetProductsDto {
  total: Int!
  products: [Product!]
}

type SearchResultModel {
  receivedProducts: [ProductModel!]!
}

type Delivery {
  id: Int!
  name: String!
  type: DeliveryTypeEnum!
  parent_id: Int
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  Children: [Delivery!]!
  Parent: Delivery
}

enum DeliveryTypeEnum {
  USER
  SUPPLIER
}

type Query {
  user: User
  getProfile: User
  userRoles(user_id: Int!, skip: Int, take: Int): [UserRole!]!
  userRole(user_id: Int!, role_name: RolesEnum!): UserRole
  suppliers(findSuppliersInput: FindSuppliersInput!, take: Int, skip: Int): [Supplier!]!
  supplier(id: Int!): Supplier
  products(FilterProductsInput: FilterProductsInput!, take: Int, skip: Int): GetProductsDto!
  product(id: Int!): Product
  searchProducts(take: Int!, skip: Int!, text: String!): SearchResultModel!
  documents(take: Int, skip: Int): [Document!]!
  document(id: Int!): Document!
  getDocuments(id: [Int!]!): [Document!]
  getDocument(id: Int!): [Document!]
  carts(take: Int, skip: Int): [Cart!]!
  cart(id: Int!): Cart
  generatePdf(id: Int!): Document
  categories(sex: ClothSexEnum!, parent_id: Int): [Category!]!
  searchCategories(sex: ClothSexEnum!, search: String!): [Category!]!
  category(id: Int!): Category
  profiles(skip: Int, take: Int): [Profile!]!
  profile(id: Int!): Profile
  addresses(take: Int, skip: Int, supplier_id: Int): [Address!]!
  address(id: Int!): Address!
  sizes(take: Int, skip: Int): [Size!]!
  size(id: Int!): Size!
  cartSize(id: Int!): CartSize!
}

input FindSuppliersInput {
  search: String
  sort_by: SortByEnum
}

enum SortByEnum {
  NAME
}

input FilterProductsInput {
  search: String!
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  createUserRole(createUserRoleInput: CreateUserRoleInput!): UserRole!
  removeUserRole(user_id: Int!, role_name: RolesEnum!): UserRole!
  createSupplier(createSupplierInput: CreateSupplierInput!): Supplier!
  updateSupplier(updateSupplierInput: UpdateSupplierInput!): Supplier
  removeSupplier(id: Int!): Supplier!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createDocument(createDocumentInput: CreateDocumentInput!): Document!
  updateDocument(updateDocumentInput: UpdateDocumentInput!): Document!
  removeDocument(id: Int!): Document!
  createCart(createCartInput: CreateCartInput!): Cart!
  updateCart(updateCartInput: UpdateCartInput!): Cart
  deleteCart(id: Int!): Cart!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(id: Int!, updateCategoryInput: UpdateCategoryInput!): Category
  removeCategory(id: Int!): Category!
  createProfile(createProfileInput: CreateProfileInput!): Profile!
  updateProfile(updateProfileInput: UpdateProfileInput!): Profile!
  removeProfile(id: Int!): Profile!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(id: Int!, updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(id: Int!): Address!
  createSize(createSizeInput: CreateSizeInput!): Size!
  updateSize(id: Int!, updateSizeInput: UpdateSizeInput!): Size!
  removeSize(id: Int!): Size!
  createCartSize(createCartSizeInput: CreateCartSizeInput!): CartSize!
  updateCartSize(updateCartSizeInput: UpdateCartSizeInput!): CartSize!
  removeCartSize(cart_id: Int!, size_id: Int!): CartSize!
}

input UpdateUserInput {
  name: String
  email: String
  newPassword: String!
  password: String!
  currency_id: Int
  array_of_delivery_ids: [Int!]
}

input CreateUserRoleInput {
  user_id: Int!
  role_name: RolesEnum!
}

input CreateSupplierInput {
  name: String!
}

input UpdateSupplierInput {
  name: String
  id: Int!
  deliver_goods_yourself: Boolean
  array_of_delivery_ids: [Int!]
}

input CreateProductInput {
  name: String!
  description: String
  description_id: Int
  array_of_document_ids: [Int!]
}

input UpdateProductInput {
  name: String
  description: String
  description_id: Int
  array_of_document_ids: [Int!]
  id: Int!
}

input CreateDocumentInput {
  url: String!
  name: String!
  type: DocumentTypeEnum!
}

input UpdateDocumentInput {
  url: String
  name: String
  type: DocumentTypeEnum
  id: Int!
}

input CreateCartInput {
  cloth_sex: ClothSexEnum
  category_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
}

input UpdateCartInput {
  cloth_sex: ClothSexEnum
  category_id: Int
  custom_size: String
  custom_model: String
  custom_knot: String
  custom_textile: String
  additional_materials: String
  artistic_description: String
  id: Int!
}

input CreateCategoryInput {
  parent_id: Int
  name: String!
  sex: ClothSexEnum
  description: String
  preview_document_id: Int!
  mannequin_document_id: Int!
}

input UpdateCategoryInput {
  parent_id: Int
  name: String
  sex: ClothSexEnum
  description: String
  preview_document_id: Int
  mannequin_document_id: Int
}

input CreateProfileInput {
  user_id: Int!
  supplier_id: Int
  document_id: Int
}

input UpdateProfileInput {
  user_id: Int
  supplier_id: Int
  document_id: Int
  id: Int!
}

input CreateAddressInput {
  type: AddressTypeEnum!
  name: String!
  postcode: Int
  country: String!
  region: String!
  city: String!
  street: String!
  house_number: Int!
  apartment_number_or_office: Int
}

input UpdateAddressInput {
  type: AddressTypeEnum
  name: String
  postcode: Int
  country: String
  region: String
  city: String
  street: String
  house_number: Int
  apartment_number_or_office: Int
}

input CreateSizeInput {
  name: String!
  russian_size: Int!
  chest_girth: String!
  waits_girth: String!
  hips_girth: String!
}

input UpdateSizeInput {
  name: String
  russian_size: Int
  chest_girth: String
  waits_girth: String
  hips_girth: String
}

input CreateCartSizeInput {
  size_id: Int!
  cart_id: Int!
}

input UpdateCartSizeInput {
  size_id: Int
  cart_id: Int
  id: Int!
}